COMMENT(-- $Id: wterm-resources.yo,v 1.8 1998/09/24 18:21:31 mason Exp $ --)
COMMENT(----------------------------------------------------------------------)
manpagesection(RESOURCES (available also as long-options))

bf(wterm) accepts application defaults set in XAPPLOADDIR/Rxvt (compile-time
defined: usually bf(/usr/lib/X11/app-defaults/Rxvt)) and resources set in
bf(~/.Xdefaults) or bf(~/.Xresources).  Note that when reading X resources,
bf(wterm) recognizes two class names: bf(XTerm) and bf(Rxvt).  The class name
bf(XTerm) allows resources common to both bf(wterm) and em(xterm) to be easily
configured, while the class name bf(Rxvt) allows resources unique to bf(wterm),
notably colours and key-handling, to be shared between different bf(wterm)
configurations.  If no resources are specified, suitable defaults will be
used.  Command-line arguments can be used to override resource settings.  The
following resources are allowed:

startdit()
    dit(bf(geometry:) em(geom))
	Create the window with the specified X window geometry [default
	80x24];
	option bf(-geometry).
    dit(bf(background:) em(colour))
	Use the specified colour as the window's background colour [default
	White];
	option bf(-bg).
    dit(bf(foreground:) em(colour))
	Use the specified colour as the window's foreground colour [default
	Black];
	option bf(-fg).
    dit(bf(color)em(n)bf(:) em(colour))
	Use the specified colour for the colour value em(n), where 0-7
	corresponds to low-intensity (normal) colours and 8-15 corresponds to
	high-intensity (bold = bright foreground, blink = bright
	background) colours.  The canonical names are as follows:
	0=black, 1=red, 2=green, 3=yellow, 4=blue, 5=magenta, 6=cyan, 7=white,
	but the actual colour names used are listed in the
	bf(COLORS AND GRAPHICS) section.
    dit(bf(colorBD:) em(colour))
	Use the specified colour to display bold characters when the
	foreground colour is the default.
    dit(bf(colorUL:) em(colour))
	Use the specified colour to display underlined characters when the
	foreground colour is the default.
    dit(bf(cursorColor:) em(colour))
	Use the specified colour for the cursor.  The default is to use the
	foreground colour;
	option bf(-cr).
    dit(bf(cursorColor2:) em(colour))
	Use the specified colour for the colour of the cursor text.  For this
	to take effect, bf(cursorColor) must also be specified.  The default
	is to use the background colour.
    dit(bf(reverseVideo:) em(boolean))
	bf(True): simulate reverse video by foreground and background colours;
	option bf(-rv),
	bf(False): regular screen colours [default];
	option bf(+rv).
	See note in bf(COLORS AND GRAPHICS) section.
    dit(bf(scrollColor:) em(colour))
	Use the specified colour for the scrollbar [default #B2B2B2].
    dit(bf(troughColor:) em(colour))
	Use the specified colour for the scrollbar's trough area [default
	#969696].
    dit(bf(backgroundPixmap:) em(file[;geom]))
	Use the specified XPM file (note the `.xpm' extension is optional)
	for the background and also optionally specify its scaling with a
	geometry string bf(WxH+X+Y), in which bf("W" / "H") specify the
	horizontal/vertical scale (percent) and bf("X" / "Y") locate the
	image centre (percent).  A scale of 0 displays the image with tiling.
	A scale of 1 displays the image without any scaling.  A scale of 2 to
	9 specifies an integer number of images in that direction.  No image
	will be magnified beyond 10 times its original size.  The maximum
	permitted scale is 1000.  [default 0x0+50+50]
    dit(bf(menu:) em(file[;tag]))
	Read in the specified menu file (note the `.menu' extension is
	optional) and also optionally specify a starting tag to find.  See
	the reference documentation for details on the syntax for the menuBar.
    dit(bf(path:) em(path))
	Specify the colon-delimited search path for finding files (XPM and
	menus), in addition to the paths specified by the bf(WTERMPATH) and
	bf(PATH) environment variables.
    dit(bf(font:) em(fontname))
	Select the main text font used [default 7x14];
	option bf(-fn).
    dit(bf(font)em(n)bf(:) em(fontname))
	Specify the alternative font em(n).  The default font values: nl()\
	indent(\
	    starttable(2)(l l)(0)\
		row(cell(bf(font):)cell(7x14))\
		row(cell(bf(font1):)cell(6x10))\
		row(cell(bf(font2):)cell(6x13))\
		row(cell(bf(font3):)cell(8x13))\
		row(cell(bf(font4):)cell(9x15))\
	    endtable())

    dit(bf(boldFont:) em(fontname))
	Specify the name of the bold font to use if bf(colorBD) has not been
	specified and it is not possible to map the default foreground colour
	to colour 8-15 [default NONE].  This font must be the same height and
	width as the normal font;
	option bf(-fb).
    dit(bf(mfont:) em(fontname))
	Select the main multiple-character text font used [default k14];
	option bf(-fk).
    dit(bf(mfont)em(n)bf(:) em(fontname))
	Specify the alternative multiple-character font em(n).  If compiled
	for multiple-character fonts, the Roman and multiple-character font
	sizes should match.
    dit(bf(multichar_encoding:) em(mode))
	Set the encoding mode to be used when multicharacter encoding is
	received;
	bf(eucj): EUC Japanese encoding [default for Kanji].
	bf(sjis): Shift JIS encoding.
	bf(big5): BIG5 encoding;
	option bf(-km).
    dit(bf(greek_keyboard:) em(mode))
	Set the Greek keyboard translation mode to be used;
	bf(iso): ISO-8859 mapping (elot-928) [default].
	bf(ibm): IBM-437 mapping (DOS codepage 737);
	option bf(-grk).
	Use bf(Mode_switch) to toggle keyboard input.  For more details,
	see the distributed file bf(README.greek).
    dit(bf(title:) em(text))
	Set window title string, the default title is the command-line
	specified after the bf(-e) option, if any, otherwise the application
	name;
	option bf(-title).
    dit(bf(iconName:) em(text))
	Set the name used to label the window's icon or displayed in an icon
	manager window, it also sets the window's title unless it is
	explicitly set;
	option bf(-n).
    dit(bf(mapAlert:) em(boolean))
	bf(True): de-iconify (map) on receipt of a bell character.
	bf(False): no de-iconify (map) on receipt of a bell character
	[default].
    dit(bf(visualBell:) em(boolean))
	bf(True): use visual bell on receipt of a bell character;
	option bf(-vb).
	bf(False): no visual bell [default];
	option bf(+vb).
    dit(bf(loginShell:) em(boolean))
	bf(True): start as a login shell by prepending a `-' to bf(argv[0])
	of the shell;
	option bf(-ls).
	bf(False): start as a normal sub-shell [default];
	option bf(+ls).
    dit(bf(utmpInhibit:) em(boolean))
	bf(True): inhibit writing record into the system log file bf(utmp);
	option bf(-ut).
	bf(False): write record into the system log file bf(utmp) [default];
	option bf(+ut).
    dit(bf(print-pipe:) em(string))
	Specify a command pipe for vt100 printer [default em(lpr(1))].  Use
	bf(Print) to initiate a screen dump to the printer and bf(Ctrl-Print)
	or bf(Shift-Print) to include the scrollback as well.
    dit(bf(scrollBar:) em(boolean))
	bf(True): enable the scrollbar [default];
	option bf(-sb).
	bf(False): disable the scrollbar;
	option bf(+sb).
	Note that the scrollbar type (with/without arrows) is compile-time
	selected.
    dit(bf(smallfont_key:) em(keysym))
	If enabled, use bf(HOTKEY()-)em(keysym) to toggle to a smaller font
	[default bf(HOTKEY()-SMALLFONT())]
    dit(bf(bigfont_key:) em(keysym))
	If enabled, use bf(HOTKEY()-)em(keysym) to toggle to a bigger font
	[default bf(HOTKEY()-BIGFONT())]
    dit(bf(saveLines:) em(number))
	Save em(number) lines in the scrollback buffer [default 64];
	option bf(-sl).
    dit(bf(termName:) em(termname))
	Specifies the terminal type name to be set in the bf(TERM)
	environment variable;
	option bf(-tn).
    dit(bf(meta8:) em(boolean))
	bf(True): handle Meta (Alt) + keypress to set the 8th bit.
	bf(False): handle Meta (Alt) + keypress as an escape prefix [default].
    dit(bf(modifier:) em(string))
	Set the Meta key to be enabled by modifier bf(Mod1), bf(Mod2), bf(Mod3),
	bf(Mod4) or bf(Mod5).
    dit(bf(backspacekey:) em(string))
	The string to send when the backspace key is pressed.  If set to
	bf(DEC) or unset it will send bf(Delete) (code 127) or, if shifted,
	bf(Backspace) (code 8) - which can be reversed with the appropriate
	DEC private mode escape sequence.
    dit(bf(deletekey:) em(string))
	The string to send when the delete key (not the keypad delete key) is
	pressed.  If unset it will send the sequence traditionally associated
	with the bf(Execute) key.
    dit(bf(cutchars:) em(string))
	The characters used as delimiters for double-click word selection. 
	The built-in default: nl()\
	bf(BACKSLASH `"'&()*,;<=>?@[]{|})
    dit(bf(keysym.)em(sym): em(string))
	Associate em(string) with keysym em(sym) (bf(0xFF00 - 0xFFFF)).  It
	may contain escape values (\a: bell, \b: backspace, \e, \E: escape,
	\n: newline, \r: return, \t: tab, \000: octal number) or control
	characters (^?: delete, ^@: null, ^A ...) and may enclosed with
	double quotes so that it can start or end with whitespace.  The
	intervening resource name bf(keysym.) cannot be omitted.  This
	resource is only available when compiled with KEYSYM_RESOURCE.
enddit()
